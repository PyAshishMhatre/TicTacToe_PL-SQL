--------------------------BOARD------------------------------------------------
DROP TABLE TICTAC;

CREATE TABLE TICTAC(
ROW_NUM NUMBER GENERATED ALWAYS AS IDENTITY START WITH 1 INCREMENT BY 1 MAXVALUE 3,
COL1 VARCHAR(1) CHECK (COL1 IN ('X','0')),
COL2 VARCHAR(1) CHECK (COL2 IN ('X','0')),
COL3 VARCHAR(1) CHECK (COL3 IN ('X','0'))
);

INSERT INTO TICTAC(COL1,COL2,COL3)
VALUES(NULL,NULL,NULL);
INSERT INTO TICTAC(COL1,COL2,COL3)
VALUES(NULL,NULL,NULL);
INSERT INTO TICTAC(COL1,COL2,COL3)
VALUES(NULL,NULL,NULL);

SELECT * FROM TICTAC;

---------------------------TRIGGER-----------------------------------------
CREATE OR REPLACE TRIGGER WIN_CHECK
AFTER UPDATE ON TICTAC 
FOR EACH ROW
DECLARE 
        pragma autonomous_transaction;
      
BEGIN

IF (:OLD.COL1 IS NULL AND :NEW.COL1 IS NOT NULL) OR (:OLD.COL2 IS NULL AND :NEW.COL2 IS NOT NULL) OR (:OLD.COL3 IS NULL AND :NEW.COL3 IS NOT NULL) OR ( (:OLD.COL1 = :NEW.COL1) OR (:OLD.COL2 = :NEW.COL2) OR (:OLD.COL3 = :NEW.COL3)) THEN

    DBMS_OUTPUT.PUT_LINE('THIS IS OLD VALUE' || :OLD.COL1);
    DBMS_OUTPUT.PUT_LINE('THIS IS NEW VALUE' || :NEW.COL1);

    DBMS_OUTPUT.PUT_LINE('TRIGGER ENTRY');
    
END IF;

IF (:OLD.COL1 <> :NEW.COL1) OR (:OLD.COL2 <> :NEW.COL2) OR (:OLD.COL3 <> :NEW.COL3) THEN
        DBMS_OUTPUT.PUT_LINE('THIS IS OLD VALUE' || :OLD.COL1);
        DBMS_OUTPUT.PUT_LINE('THIS IS NEW VALUE' || :NEW.COL1);
        DBMS_OUTPUT.PUT_LINE('CHEATER');
        raise_application_error(-20111,'TRYING TO ENTER IN SAME CELL WITH DIFFERENT VALUE');
END IF;

DBMS_OUTPUT.PUT_LINE('TRIGGER EXIT');

END;

-------------------------------------STORED PROCEDURE------------------------------------
CREATE OR REPLACE PROCEDURE PLAY(SYM IN VARCHAR, ROW_NO IN NUMBER, COL_NO IN NUMBER) AS
  -- VARIABLES
        A1 VARCHAR(1);
        A2 VARCHAR(1);
        A3 VARCHAR(1);
        B1 VARCHAR(1);
        B2 VARCHAR(1);
        B3 VARCHAR(1);
        C1 VARCHAR(1);
        C2 VARCHAR(1);
        C3 VARCHAR(1);
        FLAG BOOLEAN := TRUE;
  BEGIN
    -- UPDATE STATEMENT 
    IF COL_NO = 1 THEN 
    
    UPDATE TICTAC SET COL1 = SYM WHERE ROW_NUM = ROW_NO;
    DBMS_OUTPUT.PUT_LINE('UPDATE MADE TO COL1');
    
    ELSIF COL_NO = 2 THEN
    UPDATE TICTAC SET COL2 = SYM WHERE ROW_NUM = ROW_NO;
    DBMS_OUTPUT.PUT_LINE('UPDATE MADE TO COL2');
    
    ELSIF COL_NO = 3 THEN
    UPDATE TICTAC SET COL3 = SYM WHERE ROW_NUM = ROW_NO;
    DBMS_OUTPUT.PUT_LINE('UPDATE MADE TO COL3');
    
    ELSE
    DBMS_OUTPUT.PUT_LINE('NO UPDATE MADE');
    
    END IF;
    
    ----ASSIGN ALL VARIABLES
    SELECT COL1
    INTO A1 FROM TICTAC 
    WHERE ROW_NUM = 1;
     SELECT COL2
    INTO A2 FROM TICTAC 
    WHERE ROW_NUM = 1;
     SELECT COL3
    INTO A3 FROM TICTAC 
    WHERE ROW_NUM = 1;
    ----2ND ROW ------
    SELECT COL1
    INTO B1 FROM TICTAC 
    WHERE ROW_NUM = 2;
     SELECT COL2
    INTO B2 FROM TICTAC 
    WHERE ROW_NUM = 2;
     SELECT COL3
    INTO B3 FROM TICTAC 
    WHERE ROW_NUM = 2;
    ----3RD ROW----
    SELECT COL1
    INTO C1 FROM TICTAC 
    WHERE ROW_NUM = 3;
     SELECT COL2
    INTO C2 FROM TICTAC 
    WHERE ROW_NUM = 3;
     SELECT COL3
    INTO C3 FROM TICTAC 
    WHERE ROW_NUM = 3;
    
    -- CHECK FOR WIN
    IF (A1 = A2) AND (A2 = A3) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || A1 || ' WON BY FIRST ROW STRIKE');
    FLAG := FALSE;
    ELSIF (B1 = B2) AND (B2 = B3) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || B1 || ' WON BY SECOND ROW STRIKE');
    FLAG := FALSE;
    ELSIF (C1 = C2) AND (C2 = C3) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || C1 || ' WON BY THIRD ROW STRIKE');
    FLAG := FALSE;
    ELSIF (A1 = B1) AND (B1 = C1) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || A1 || ' WON BY FIRST COLUMN STRIKE');
    FLAG := FALSE;
    ELSIF (A2 = B2) AND (B2 = C2) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || A2 || ' WON BY SECOND COLUMN STRIKE');
    FLAG := FALSE;
    ELSIF (A3 = B3) AND (B3 = C3) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || A3 || ' WON BY THID COLUMN STRIKE');
    FLAG := FALSE;
    ELSIF (A1 = B2) AND (B2 = C3) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || A1 || ' WON BY FIRST DIAGONAL STRIKE');
    FLAG := FALSE;
    ELSIF (A3 = B2) AND (B2 = C1) THEN 
    DBMS_OUTPUT.PUT_LINE('PLAYER WITH ' || A3 || ' WON BY SECOND DIAGONAL STRIKE');
    FLAG := FALSE;
    ELSIF (A1 IS NULL OR A2 IS NULL OR A3 IS NULL OR B1 IS NULL OR B2 IS NULL OR B3 IS NULL OR C1 IS NULL OR C2 IS NULL OR C3 IS NULL) THEN --- CHECKING FOR ANY NULL PRESENT 
    DBMS_OUTPUT.PUT_LINE('GAME IS STILL ON');
    FLAG := FALSE;
    END IF;
    ----- TIE CONDITION
    IF FLAG THEN
    DBMS_OUTPUT.PUT_LINE('TOUGH FIGHT GAME TIED');
    END IF;
    

 END;
------------------------------TESTING --------------------

EXEC PLAY('X',3,1);
SELECT * FROM TICTAC;